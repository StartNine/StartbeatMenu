<ResourceDictionary xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:StartbeatMenu"
                    xmlns:conv="clr-namespace:Start9.UI.Wpf.Converters;assembly=Start9.UI.Wpf"
                    xmlns:winstat="clr-namespace:WindowsSharp.Statics;assembly=WindowsSharp"
                    xmlns:disk="clr-namespace:WindowsSharp.DiskItems;assembly=WindowsSharp"
                    xmlns:tic="clr-namespace:Start9.UI.Wpf.Statics;assembly=Start9.UI.Wpf"
                    xmlns:io="clr-namespace:System.IO;assembly=System.IO.FileSystem"
                    xmlns:e="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime.Extensions">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Start9.UI.Wpf;component/Themes/Shale.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <conv:IconToImageBrushConverter x:Key="IconToImageBrushConverter"/>
    <conv:SysDrawingImageToImageBrushConverter x:Key="SysDrawingImageToImageBrushConverter"/>
    <conv:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter"/>
    <local:FileSystemInfoToContentsCollectionConverter x:Key="FileSystemInfoToContentsCollectionConverter"/>

    <Style x:Key="{x:Type local:MainWindow}" TargetType="{x:Type local:MainWindow}">
        <Setter Property="FontFamily" Value="Ubuntu"/>
        <Setter Property="CompositionState" Value="Alpha"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Width" Value="411"/>
        <Setter Property="MinHeight" Value="506"/>
        <Setter Property="Height" Value="506"/>
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}"/>
        <Setter Property="HideTransitionDuration" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ShadowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Window}">
                    <Setter Property="WindowStyle" Value="None"/>
                    <Setter Property="ResizeMode" Value="NoResize"/>
                    <Setter Property="AllowsTransparency" Value="True"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MainWindow}">
                    <Grid Margin="4,3,4,5" Effect="{DynamicResource DropShadow}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="3">
                            <DockPanel>
                                <Border BorderBrush="{DynamicResource TitlebarBorderBrush}" BorderThickness="1" CornerRadius="2,2,0,0" DockPanel.Dock="Top">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TitlebarActiveGradientStops}"/>
                                    </Border.Background>
                                    <DockPanel>
                                        <Border Background="{Binding UserAvatar, Source={x:Static winstat:SystemContext.Instance}, Converter={StaticResource SysDrawingImageToImageBrushConverter}}" BorderBrush="{DynamicResource TitlebarIdleForegroundBrush}" BorderThickness="2" CornerRadius="3" Effect="{DynamicResource DropShadow}" HorizontalAlignment="Left" Margin="4" Width="50" Height="50" DockPanel.Dock="Left"/>
                                        <TextBlock FontWeight="Bold" FontSize="12" Foreground="{DynamicResource TitlebarIdleForegroundBrush}" HorizontalAlignment="Center" TextAlignment="Center" Margin="100,0" Effect="{DynamicResource DropShadow}" Text="{x:Static sys:Environment.UserName}" IsHitTestVisible="False" VerticalAlignment="Center"/>
                                    </DockPanel>
                                </Border>
                                <Grid>
                                    <DockPanel>
                                        <Border Style="{DynamicResource HorizontalBarBorderStyle}" Height="50" VerticalAlignment="Bottom" BorderThickness="0,1,0,0" CornerRadius="0,0,2,2" DockPanel.Dock="Bottom"/>
                                        <Border Style="{DynamicResource VerticalBarBorderStyle}" Width="{Binding ActualWidth, ElementName=PinnedAppsListView, Mode=OneWay, FallbackValue=0}" BorderThickness="0,0,1,0" DockPanel.Dock="Left"/>
                                        <Rectangle Fill="{DynamicResource WindowBackgroundBrush}"/>
                                    </DockPanel>
                                    <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}"/>
                                    <Rectangle VerticalAlignment="Top" Height="18" IsHitTestVisible="False">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle VerticalAlignment="Bottom" Height="9" IsHitTestVisible="False" Margin="0,50">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush Opacity="0.625" StartPoint="0,1" EndPoint="0,0" GradientStops="{DynamicResource ShadowGradientStops}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </DockPanel>
                        </Border>
                        <Rectangle Height="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Fill="#FFD6E5F5" Margin="16,0" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="PinnedItemsListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type io:FileSystemInfo}">
                    <DockPanel>
                        <Rectangle Width="32" Height="32" VerticalAlignment="Center"/>
                        <!--Fill="{Binding ItemLargeIcon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='32'}"-->
                        <TextBlock Text="{Binding Name}" Margin="6,0,0,0" VerticalAlignment="Center"/>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <!--Setter Property="Margin" Value="2,2,0,-2"/-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <StackPanel Margin="0,0,1,0" IsItemsHost="True" Orientation="Vertical" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlacesListViewStyle" TargetType="{x:Type ListView}" BasedOn="{StaticResource {x:Type ListView}}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type io:DirectoryInfo}">
                    <Grid x:Name="RootGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <e:Interaction.Behaviors>
                                    <local:PlaceContextMenuBehavior TargetItem="{Binding}" OpenMenuItem="{Binding Source={x:Reference Name=OpenMenuItem}}" RemoveMenuItem="{Binding Source={x:Reference Name=RemoveMenuItem}}"/>
                                </e:Interaction.Behaviors>
                                <MenuItem x:Name="OpenMenuItem" Header="Open"/>
                                <MenuItem x:Name="RemoveMenuItem" Header="Remove"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <DockPanel IsHitTestVisible="False">
                            <Rectangle Width="24" Height="24"/>
                            <!--Fill="{Binding ItemLargeIcon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='24'}" VerticalAlignment="Center" IsHitTestVisible="False" Margin="0,0,6,0" UseLayoutRounding="True" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor" Visibility="{Binding RightColumnIcons, Source={x:Static local:Config.Instance}, Converter={StaticResource BooleanToVisibilityConverter}}-->
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" IsHitTestVisible="False"/>
                        </DockPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <!--Setter Property="Margin" Value="0,39,0,0"/-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Grid Background="#01000000">
                        <StackPanel IsItemsHost="True" Orientation="Vertical" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AllAppsTreeViewStyle" TargetType="{x:Type TreeView}" BasedOn="{StaticResource {x:Type TreeView}}">
        <Style.Resources>
            <HierarchicalDataTemplate x:Key="DataTemplateBase" DataType="{x:Type io:FileSystemInfo}" ItemsSource="{Binding Converter={StaticResource FileSystemInfoToContentsCollectionConverter},Mode=OneWay}">
                <DockPanel Margin="0,2">
                    <Rectangle Width="16" Height="16" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                    <!--Fill="{Binding ItemSmallIcon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='16'}"-->
                    <TextBlock Text="{Binding Name}" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" VerticalAlignment="Center"/>
                </DockPanel>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate DataType="{x:Type io:FileInfo}">
                <DockPanel Margin="0,2">
                    <Rectangle Width="16" Height="16" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                    <!--Fill="{Binding ItemSmallIcon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='16'}"-->
                    <TextBlock Text="{Binding Name}" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" VerticalAlignment="Center"/>
                </DockPanel>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate DataType="{x:Type io:DirectoryInfo}" ItemsSource="{Binding Converter={StaticResource FileSystemInfoToContentsCollectionConverter}, Mode=OneWay}">
                <DockPanel Margin="0,2">
                    <Rectangle Width="16" Height="16" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                    <!--Fill="{Binding ItemSmallIcon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='16'}"-->
                    <TextBlock Text="{Binding Name}" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" VerticalAlignment="Center"/>
                </DockPanel>
            </HierarchicalDataTemplate>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <ScrollViewer Margin="0,2,7,0" Focusable="False" HorizontalScrollBarVisibility="Disabled">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AllAppsToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Height" Value="28"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5,5,6,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="IdleBackground" CornerRadius="{Binding Path=(tic:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='3,3,3,3;0,0,0,0'}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonIdleBorderBrush}" BorderThickness="1">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border x:Name="IdleInnerBackground" CornerRadius="{Binding Path=(tic:AttachedProperties.CornerCurves), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CornerCurvesToCornerRadiusConverter}, ConverterParameter='2,2,2,2;0,0,0,0'}" Margin="1" Padding="0" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0"/>
                        </Border>
                        <Border x:Name="HoverBackground" CornerRadius="{Binding CornerRadius, ElementName=IdleBackground}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonHoverBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border CornerRadius="{Binding CornerRadius, ElementName=IdleInnerBackground}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonHoverSecondaryBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="PressedBackground" CornerRadius="{Binding CornerRadius, ElementName=IdleBackground}" Margin="0" Padding="0" BorderBrush="{DynamicResource ButtonPressedBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedBackgroundGradientStops}"/>
                            </Border.Background>
                            <Border CornerRadius="{Binding CornerRadius, ElementName=IdleInnerBackground}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonPressedSecondaryBackgroundGradientStops}"/>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="DisabledBackground" CornerRadius="{Binding CornerRadius, ElementName=IdleBackground}" Margin="0" Padding="0" Background="{DynamicResource ButtonDisabledBackgroundBrush}" BorderBrush="{DynamicResource ButtonDisabledBorderBrush}" BorderThickness="1" Opacity="0">
                            <Border CornerRadius="{Binding CornerRadius, ElementName=IdleInnerBackground}" Margin="1" Padding="0" BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource ButtonDisabledSecondaryBackgroundBrush}"/>
                        </Border>
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" />
                        <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid Margin="0,0,5,0">
                                <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 6 6 L 0 12" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="15,0">
                                <ContentControl x:Name="AllAppsControl" Content="All Apps" Focusable="False" IsTabStop="False" Opacity="1"/>
                                <ContentControl x:Name="BackControl" Content="Bacc" Focusable="False" IsTabStop="False" Opacity="0"/>
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="AllAppsControl" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="BackControl" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="RenderTransform.Angle" To="180" Duration="0:0:0.125"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="AllAppsControl" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="BackControl" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="RenderTransform.Angle" To="0" Duration="0:0:0.125"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Margin" Value="5,5,3,5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="40"/>
    </Style>

    <Style x:Key="ShutDownButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="10,5"/>
    </Style>

    <Style x:Key="ShutDownLeftButtonStyle" TargetType="Button" BasedOn="{StaticResource ShutDownButtonStyle}">
        <Setter Property="Margin" Value="2,5,-1,5"/>
        <Setter Property="tic:AttachedProperties.CornerCurves">
            <Setter.Value>
                <tic:CornerCurves TopRight="False" BottomRight="False"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShutDownRightButtonStyle" TargetType="Button" BasedOn="{StaticResource ShutDownButtonStyle}">
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="ContextMenuService.Placement" Value="Right" />
        <Setter Property="ContextMenuService.PlacementRectangle">
            <Setter.Value>
                <Rect X="0" Y="0" Width="0" Height="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="tic:AttachedProperties.CornerCurves">
            <Setter.Value>
                <tic:CornerCurves TopLeft="False" BottomLeft="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Content">
            <Setter.Value>
                <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 6 6 L 0 12" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" StrokeThickness="2"/>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PlaceButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Height" Value="33"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" CornerRadius="4" BorderThickness="1" BorderBrush="#FF7DA2CE" Opacity="1">
                            <Border BorderThickness="1" CornerRadius="3">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFD9ECFB"/>
                                            <GradientStop Offset="1" Color="#FFC1DBFE"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFECF2FF"/>
                                            <GradientStop Offset="1" Color="#FFDCEBFE"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentControl x:Name="ContentControl" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="6,0" Focusable="False" IsTabStop="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StartStyle" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
                        <Grid Margin="8,11,4,1">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="#7F000000" Stroke="#7FFFFFFF" StrokeThickness="1"/>
                            <Grid x:Name="IdleBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Background="Transparent" Opacity="1">
                                <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush GradientOrigin="0.5,1" Center="0.5,1" RadiusY="1">
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF19DBFF"/>
                                                <GradientStop Offset="1" Color="#FF00355D"/>
                                            </RadialGradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Grid>
                            <Grid x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Background="Transparent" Opacity="0">
                                <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush GradientOrigin="0.5,1" Center="0.5,1" RadiusY="1">
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF19DBFF"/>
                                                <GradientStop Offset="1" Color="#FF076C92"/>
                                            </RadialGradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Grid>
                            <Grid x:Name="PressedBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Background="Transparent" Opacity="0">
                            </Grid>
                            <Grid x:Name="DisabledBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Background="Transparent" Opacity="0">
                            </Grid>
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" />
                            <Border Width="22" Height="22" Background="#FF2E001F" BorderBrush="#FFFC25BC" BorderThickness="1" CornerRadius="2">
                                <TextBlock FontFamily="Myriad Web Pro" FontWeight="Bold" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFFFD9F2" FontSize="12">Xd</TextBlock>
                            </Border>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2">
                                <Ellipse.Fill>
                                    <RadialGradientBrush GradientOrigin="0.5,1" Center="0.5,1" RadiusX="1.5" RadiusY="1.1875">
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStop Offset="0.5" Color="Transparent"/>
                                            <GradientStop Offset="0.5" Color="#40FFFFFF"/>
                                            <GradientStop Offset="1" Color="#C0FFFFFF"/>
                                        </RadialGradientBrush.GradientStops>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2">
                                <Ellipse.Fill>
                                    <RadialGradientBrush GradientOrigin="0.5,0.625" Center="0.5,0.625" RadiusX="1.0625" RadiusY="1">
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStop Offset="0.375" Color="Transparent"/>
                                            <GradientStop Offset="0.875" Color="#FFFFFFFF"/>
                                        </RadialGradientBrush.GradientStops>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                            Storyboard.TargetProperty="Opacity" To="1"
                                            Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                            Storyboard.TargetProperty="Opacity" To="1"
                                            Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                            Storyboard.TargetProperty="Opacity" To="0"
                                            Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                            Storyboard.TargetProperty="Opacity" To="1"
                                            Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                            Storyboard.TargetProperty="Opacity" To="1"
                                            Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="e" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
                        <Grid>
                            <Border x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" CornerRadius="4" BorderThickness="1" BorderBrush="#FF7DA2CE" Opacity="0">
                                <Border BorderThickness="1" CornerRadius="3">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FFD9ECFB"/>
                                                <GradientStop Offset="1" Color="#FFC1DBFE"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FFECF2FF"/>
                                                <GradientStop Offset="1" Color="#FFDCEBFE"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Rectangle x:Name="Shine" Margin="0,0,0,-100" Height="38" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#C0FFFFFF"/>
                                            <GradientStop Offset="1" Color="#40FFFFFF"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter x:Name="ContentControl" Content="{TemplateBinding Header}" Focusable="False" Opacity="1" Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="Shine" Storyboard.TargetProperty="Height" To="0" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="Shine" Storyboard.TargetProperty="Height" To="23" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>